syntax = "proto3";
package requests;

// Convention: Use proto type 'bytes' (vec<u8> in Rust) for serialized data structures
// amd string (String in Rust) for the rest

service ThresholdCryptoLibrary {
    rpc decrypt (ThresholdDecryptionRequest) returns (ThresholdDecryptionResponse);
    rpc push_decryption_share (PushDecryptionShareRequest) returns (PushDecryptionShareResponse); //this is an alternative way to send shares
}

message ThresholdDecryptionRequest {
    // ThresholdCipher algorithm = 1;
    // DlGroup dl_group = 2;
    bytes ciphertext = 1;
    optional string key_id = 2;
}

message ThresholdDecryptionResponse {
    string instance_id = 1;
}

message PushDecryptionShareRequest {
  string instance_id = 1;
  bytes decryption_share = 2;

}

message PushDecryptionShareResponse {
}

// enum ThresholdCipher {
//   Bz02 = 0;
//   Sg02 = 1;
// }

// enum DlGroup {
//   Bls12381 = 0;
// }


